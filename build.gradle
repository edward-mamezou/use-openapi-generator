plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

configurations {
    all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    unzipFile
}

group = 'com.mamezou-tech.example-service'
version = '0.6.0-SNAPSHOT'
sourceCompatibility = '1.17'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.integration:spring-integration-mqtt'

    implementation 'com.googlecode.soundlibs:mp3spi:1.9.5-1'

    implementation 'software.amazon.awssdk:polly:2.17.213'

    implementation 'com.google.zxing:javase:3.5.0'

    implementation ('com.mamezou-tech.example-service:example-controller:' + version) {
        changing = true
    }
    unzipFile      ('com.mamezou-tech.example-service:example-application:' + version) {
        changing = true
    }

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task unzip(type: Copy) {
    def file = configurations.unzipFile.files.find {
        'example-application-' + version + '.jar'
    }
    from zipTree(file)
    into 'build/unzipFile'
}

task copy(type: Copy) {
    from fileTree('build/unzipFile/BOOT-INF/classes')
    into 'build/classes/java/main'
}

tasks.copy.dependsOn(tasks.unzip)
tasks.compileJava.dependsOn(tasks.copy)
